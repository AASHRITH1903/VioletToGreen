[[{"startLine":22,"endLine":22,"string":"// j trials for only 1 egg","startCharacter":9,"endCharacter":35,"filepath":"/home/aashrith1903/Projects/VioletToGreen/Dataset/ToyData/CodeFiles/EggDropping.java"},{"startLine":24,"endLine":27,"string":"for (int j = 1; j <= m; j++) {\n            eggFloor[1][j] = j;\n            System.out.println(\"output\");\n        }","startCharacter":9,"endCharacter":10,"filepath":"/home/aashrith1903/Projects/VioletToGreen/Dataset/ToyData/CodeFiles/EggDropping.java"}],[{"startLine":48,"endLine":48,"string":"witch (x) ","startCharacter":9,"endCharacter":19,"filepath":"/home/aashrith1903/Projects/VioletToGreen/Dataset/ToyData/CodeFiles/EggDropping.java"},{"startLine":49,"endLine":63,"string":"   // no keyword\n            case 0:\n                // inside case\n                System.out.println(\"0\");\n                break;\n            case 1:\n                // inside no keyword\n                System.out.println(\"1\");\n                break;\n            // this case is here\n            default:\n                System.out.println(x);\n                break;\n        }\n","startCharacter":9,"endCharacter":10,"filepath":"/home/aashrith1903/Projects/VioletToGreen/Dataset/ToyData/CodeFiles/EggDropping.java"}],[{"startLine":80,"endLine":80,"string":"nt result = minTrials(n, m);","startCharacter":9,"endCharacter":82,"filepath":"/home/aashrith1903/Projects/VioletToGreen/Dataset/ToyData/CodeFiles/EggDropping.java"},{"startLine":81,"endLine":81,"string":"ystem.out.println(","startCharacter":9,"endCharacter":38,"filepath":"/home/aashrith1903/Projects/VioletToGreen/Dataset/ToyData/CodeFiles/EggDropping.java"}],[{"startLine":10,"endLine":10,"string":"","startCharacter":5,"endCharacter":43,"filepath":"/home/aashrith1903/Projects/VioletToGreen/Dataset/ToyData/CodeFiles/EggDropping.java"},{"startLine":12,"endLine":76,"string":"\n        int[][] eggFloor = new int[n + 1][m + 1];\n        int result, x;\n\n        for (int i = 1; i <= n; i++) {\n            eggFloor[i][0] = 0; // Zero trial for zero floor.\n            eggFloor[i][1] = 1; // One trial for one floor\n        }\n\n        // j trials for only 1 egg\n\n        for (int j = 1; j <= m; j++) {\n            eggFloor[1][j] = j;\n            System.out.println(\"output\");\n        }\n\n        // Using bottom-up approach in DP\n        for (int i = 2; i <= n; i++) {\n            for (int j = 2; j <= m; j++) {\n                eggFloor[i][j] = Integer.MAX_VALUE;\n                for (x = 1; x <= j; x++) {\n                    result = 1 + Math.max(eggFloor[i - 1][x - 1], eggFloor[i][j - x]);\n\n                    // choose min of all values for particular x\n                    if (result < eggFloor[i][j]) {\n                        eggFloor[i][j] = result;\n                    } else if (a == b) { // the above equation\n                        System.out.println(\"a==b\");\n                    } else { // this is here\n                        System.out.println(\"a!=b\");\n                    }\n                }\n            }\n        }\n\n        // in here\n        switch (x) {\n            // no keyword\n            case 0:\n                // inside case\n                System.out.println(\"0\");\n                break;\n            case 1:\n                // inside no keyword\n                System.out.println(\"1\");\n                break;\n            // this case is here\n            default:\n                System.out.println(x);\n                break;\n        }\n\n        // hello\n        do {\n            System.out.println(\"x\");\n        } while (x == 0);\n        // the above loop\n\n        while (true) {\n            System.out.println(\"\");\n        }\n\n        return eggFloor[n][m];\n    }\n","startCharacter":5,"endCharacter":6,"filepath":"/home/aashrith1903/Projects/VioletToGreen/Dataset/ToyData/CodeFiles/EggDropping.java"}]]